name: CI Pipeline

on:
    push:
        branches: [main]
        tags: ['v*']
    pull_request:
        branches: [main]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Generate prisma client
              run: npx prisma generate

            - name: Run tests
              run: npm test
              env:
                NODE_ENV: test

    build-and-push:
        needs: test
        runs-on: ubuntu-latest

        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata for Docker image
              id: meta
              uses: docker/metadata-action@v4
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                tags: |
                    type=ref,event=branch
                    type=semver,pattern={{version}}
                    type=semver,pattern={{major}}.{{minor}}
                    type=sha,format=short

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max